#! /usr/bin/env perl

use Getopt::Long;
use File::Path;
use IO::File;
use strict;

my $gpath = $ENV{GPT_LOCATION};

if (!defined($gpath))
{
    $gpath = $ENV{GLOBUS_LOCATION};
}

if (!defined($gpath))
{
    die "GPT_LOCATION or GLOBUS_LOCATION needs to be set before running this script";
}

@INC = (@INC, "$gpath/lib/perl");

require Grid::GPT::Setup;

my $globusdir	= $ENV{GLOBUS_LOCATION};
my $setupdir	= "$globusdir/setup/globus";
my $sysconfdir	= "$globusdir/etc";
my $libexecdir	= "$globusdir/libexec";
my $bindir	= "$globusdir/bin";
my $sbindir	= "$globusdir/sbin";
my $usage_data_dir = "$globusdir/var/usage";
my $db_driver   = "psycopg2";
my $db_host     = '';
my $db_port     = '';
my $db_name     = "usagestats";
my $db_user     = '';
my $db_passwd   = '';
my $collector_port = '4810';
my $config_file = undef;
my $help	= 0;

sub usage
{
    print <<EOF;
Usage: $0 [options]
Options: 
  -h                                    Print this help message and exit
  -driver DRIVER                        Use DRIVER as the python database
                                        driver [default: psycopg2]
  -database DATABASE                    Use DATABASE as the database name
                                        [default: usagestats]
  -host HOST                            Use HOST as the database host
  -port PORT                            Use PORT as the database port
  -user USER                            Use USER as the database user name.
  -password PASSWORD                    Use PASSWORD as the database password.
  -collector-port PORT                  Listen for usage packets on UDP PORT.
EOF
    exit 0;
}

GetOptions('usage-dir|d=s' => \$usage_data_dir,
           'driver=s' => \$db_driver,
           'host=s' => \$db_host,
           'port=s' => \$db_port,
           'database=s' => \$db_name,
           'user=s' => \$db_user,
           'password=s' => \$db_passwd,
           'collector-port=s' => \$collector_port,
           'help|h' => \$help) || usage();

&usage if($help);

my $metadata = new Grid::GPT::Setup(package_name => "globus_usage_tools_setup");

if (! -d $usage_data_dir)
{
    mkpath($usage_data_dir)
        || die "Unable to create usage directory $usage_data_dir\n";
}

$config_file = new IO::File(">$sysconfdir/globus-usage-tools.conf");
$config_file->print(<<EOF);
driver = "$db_driver"
database = "$db_name"
host = "$db_host"
port = "$db_port"
user = "$db_user"
password = "$db_passwd"
data_directory = "$usage_data_dir"
collector_port = "$collector_port"
EOF
$config_file->close();

print "Done\n";

$metadata->finish();
