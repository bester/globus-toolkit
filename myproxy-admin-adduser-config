#!/usr/bin/perl

# myproxy admin adduser config script

# Generates configuration file for use by myproxy-admin-adduser script
# Configuration file: $GLOBUS_LOCATION/etc/myproxy-adduser.config

use Env;  #module to access environment variables
Env::import(); #tie environment vars to local vars with same name

if (!defined($GLOBUS_LOCATION)) {
    print STDERR "Error: \$GLOBUS_LOCATION undefined.\n";
    exit 1;
}

unless (open(CONFIG, '>', "${GLOBUS_LOCATION}/etc/myproxy-adduser.config")) {
    print STDERR "Cannot open config file ";
    print STDERR "${GLOBUS_LOCATION}/etc/myproxy-adduser.config for writing.";
    exit 1;
}

print CONFIG "#myproxy-adduser.config\n\n";
print CONFIG "#configuration file for myproxy-admin-adduser script\n";
print CONFIG "#created by myproxy-admin-adduser-config script\n\n";
print CONFIG "#Feel free to modify the contents\n\n";

#grid-cert-request options

print "Temporary directory name [/tmp]: ";
chop($tmp_dir_name = <STDIN>);
print CONFIG "#temporary directory\n";
if (length $tmp_dir_name > 0) {
    print CONFIG "tmp_dir_name=${tmp_dir_name}\n\n";
} else {
    print CONFIG "#tmp_dir_name=/tmp\n\n";
}

#myproxy-admin-load-credential options

if (stat("/var/myproxy")) {
    $default="/var/myproxy";
} elsif (stat("${GLOBUS_LOCATION}/var/myproxy")) {
    $default="${GLOBUS_LOCATION}/var/myproxy";
} else {
    $default="/var/myproxy";
}
print "Credential Storage Directory [$default]: ";
chop ($cred_store = <STDIN>);
print CONFIG "#credential store directory\n";
if (length $cred_store > 0) {
    print CONFIG "cred_store=${cred_store}\n\n";
} else {
    print CONFIG "#cred_store=${default}\n\n";
}

print "Specify per-credential retrieval policy (y/n) [n]? ";
chop($inp = <STDIN>);
print CONFIG "#per-credential retrieval policy\n";
if ($inp eq "y") {
    print "Enter regular expression: ";
    chop($ret_retex = <STDIN>);
    if (length $ret_regex > 0) {
	print CONFIG "ret_regex=${ret_regex}\n\n";
    } else {
	undef $ret_regex;
	print "None specified.\n";
	print CONFIG "#ret_regex=\n\n";
    }
} else {
    print CONFIG "#ret_regex=\n\n";
}

print CONFIG "#per-credential renewal policy\n";
if (!defined($ret_regex)) {
    print "Specify per-credential renewal policy (y/n) [n]? ";
    chop($inp = <STDIN>);
    if ($inp eq "y") {
	print "Enter regular expression: ";
	chop($ren_retex = <STDIN>);
	if (length $ren_regex > 0) {
	    print CONFIG "ren_regex=${ren_regex}\n\n";
	} else {
	    print "None specified.\n";
	    print CONFIG "#ren_regex=\n\n";
	}
    } else {
	print CONFIG "#ren_regex=\n\n";
    }
} else {
    print CONFIG "#ren_regex=\n\n";
}

print "Credential name (optional): ";
chop($credname = <STDIN>);
print CONFIG "#credential name\n";
if (length $credname > 0) {
    print CONFIG "credname=${credname}\n\n";
} else {
    print CONFIG "#credname=\n\n";
}

print "Credential description (optional): ";
chop($creddesc = <STDIN>);
print CONFIG "#credential description\n";
if (length $creddesc > 0) {
    print CONFIG "creddesc=${creddesc}\n\n";
} else {
    print CONFIG "#creddesc=\n\n";
}

print CONFIG "#end configuration file\n";

print "myproxy-admin-adduser-config complete.\n";
print "To change general options, re-run myproxy-admin-adduser-config\n";
print "or edit $GLOBUS_LOCATION/etc/myproxy-adduser.config.\n";

exit 0;
