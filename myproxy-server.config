#
# Example myproxy server configuration file.
#
# You should modify this file to meet your specific requirements.
#
# Any line starting with a pound sign (#) is a comment.
#
######################################################################

#
# Accepted Credentials
#
# Which credentials is the server willing to accept and store?
#
# Willing to store Alliance credentials
#accepted_credentials  "/C=US/O=National Computational Science Alliance/CN=*"
#
# Willing to store Globus credentials
#accepted_credentials  "/C=US/O=Globus/*"
#accepted_credentials  "/O=Grid/O=Globus/*"

#
# Authorized Retrievers
#
# Who is authorized to retrieve credentials from the repository?
#
# Allow only trusted Alliance web portals with a valid Myproxy
# passphrase to retrieve credentials, thereby discouraging users from
# giving out their Myproxy passphrase to untrusted sites and limiting
# the vulnerability of the credentials stored on the Myproxy server.
# Note: NCSA doesn't audit sites with portal certificates.
#authorized_retrievers "/C=US/O=National Computational Science Alliance/CN=portal/*"
#
# Allow any client, including anonymous clients, with a valid MyProxy
# passphrase to retrieve credentials.
#authorized_retrievers "*"

#
# Authorized Renewers
#
# Who is authorized to renew a proxy credential before it expires?
#
# If no authorized_renewers line is defined, credential renewal is not
# allowed. 
#
# Allow trusted schedulers to renew proxy credentials for the jobs
# they manage.
# Note: NCSA doesn't give out /CN=scheduler/* certificates.  This is
# a fictitious example.
#authorized_renewers "/C=US/O=National Computational Science Alliance/CN=scheduler/*"
#
# Allow any client to renew a proxy credential.  In this case, the
# client can simply authenticate with the proxy it wants to renew.
# This is potentially dangerous, in that it can be used to extend the
# lifetime of a compromised proxy credential on any host.
#authorized_renewers "*"
