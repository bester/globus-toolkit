#ifndef GLOBUS_XIO_MODE_E_DRIVER_INCLUDE
#define GLOBUS_XIO_MODE_E_DRIVER_INCLUDE

#include "globus_xio_system.h"
#include "globus_common.h"

#define GLOBUS_XIO_MODE_E_IO_Q_SIZE 8
#define GLOBUS_XIO_MODE_E_HEADER_COUNT 8
#define GLOBUS_XIO_MODE_E_MAX_OFFSET_SIZE 8

#define GLOBUS_XIO_MODE_E_DATA_DESCRIPTOR_CLOSE 0x04
#define GLOBUS_XIO_MODE_E_DATA_DESCRIPTOR_EOD 0x08
#define GLOBUS_XIO_MODE_E_DATA_DESCRIPTOR_RESTART 0x10
#define GLOBUS_XIO_MODE_E_DATA_DESCRIPTOR_ERRORS 0x20
#define GLOBUS_XIO_MODE_E_DATA_DESCRIPTOR_EOF 0x40
#define GLOBUS_XIO_MODE_E_DATA_DESCRIPTOR_EOR 0x80

typedef enum
{
    /*
     * handle cntls
     */		

    /*
     * attr cntls
     */

    GLOBUS_XIO_MODE_E_SET_HANDLE,

    GLOBUS_XIO_MODE_E_GET_HANDLE,

    GLOBUS_XIO_MODE_E_SET_STACK,

    GLOBUS_XIO_MODE_E_GET_STACK,

    GLOBUS_XIO_MODE_E_SET_NUM_STREAMS,

    GLOBUS_XIO_MODE_E_GET_NUM_STREAMS,

    GLOBUS_XIO_MODE_E_APPLY_ATTR_CNTLS,

    GLOBUS_XIO_MODE_E_SET_CONNECTION_CACHING,

    GLOBUS_XIO_MODE_E_GET_CONNECTION_CACHING,

    GLOBUS_XIO_MODE_E_SET_CLOSE,

    GLOBUS_XIO_MODE_E_GET_CLOSE,

    GLOBUS_XIO_MODE_E_SET_EOF,

    GLOBUS_XIO_MODE_E_GET_EOF

} globus_xio_mode_e_cmd_t;	


typedef enum globus_i_xio_mode_e_state_s
{

    GLOBUS_XIO_MODE_E_NONE,
    GLOBUS_XIO_MODE_E_SERVER_INIT,
    GLOBUS_XIO_MODE_E_SERVER_ACCEPT,
    GLOBUS_XIO_MODE_E_OPENING,
    GLOBUS_XIO_MODE_E_OPEN,
    GLOBUS_XIO_MODE_E_ERROR,
    GLOBUS_XIO_MODE_E_EOF,
    GLOBUS_XIO_MODE_E_CLOSING

} globus_i_xio_mode_e_state_t;


enum
{

    GLOBUS_XIO_MODE_E_HANDLE_ERROR, 
    GLOBUS_XIO_MODE_E_ACCEPT_ERROR, 
    GLOBUS_XIO_MODE_E_OPEN_ERROR, 
    GLOBUS_XIO_MODE_E_READ_ERROR, 
    GLOBUS_XIO_MODE_E_WRITE_ERROR,
    GLOBUS_XIO_MODE_E_OVERFLOW_ERROR

};

#endif
