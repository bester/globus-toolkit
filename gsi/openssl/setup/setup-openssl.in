#! /usr/bin/perl

# Copyright 1999-2010 University of Chicago
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

BEGIN
{
    if (exists $ENV{GPT_LOCATION})
    {
        push(@INC, "$ENV{GPT_LOCATION}/lib/perl");
    }

    if (exists $ENV{GLOBUS_LOCATION})
    {
        push(@INC, "$ENV{GLOBUS_LOCATION}/lib/perl");
    }
    else
    {
        push(@INC, '@libdir@/perl');

    }
}

use Grid::GPT::Setup;
use Getopt::Long;

my $openssl             = '';

GetOptions('with-openssl=s' => \$openssl,
           'help|h' => \$help);

&usage if $help;

my $metadata =
    new Grid::GPT::Setup(package_name => 'globus_openssl_setup');

my $libexecdir      = $Globus::Core::Paths::libexecdir;
my $setupdir        = "$Globus::Core::Paths::exec_prefix/setup/globus";
my $openssl_exec    = '';

chdir $setupdir;

if (! -d "$Globus::Core::Paths::bindir" )
{
    mkdir "${globusdir}/bin", 0777;
}

if (-l "$Globus::Core::Paths::bindir/openssl")
{
    unlink "$Globus::Core::Paths::bindir/openssl";
}

if ($openssl ne '')
{
    if (-f $openssl && -x $openssl)
    {
        $openssl_exec = $openssl;
    }
    elsif (-d $openssl && -x "${openssl}/bin/openssl")
    {
        $openssl_exec = "${openssl}/bin/openssl";
    }
}

if ($openssl_exec eq '')
{
    $openssl_exec = `which openssl`;
    chomp($openssl_exec);
}

if (! -x $openssl_exec)
{
    print STDERR "Unable to find openssl\n";
    exit 1;
}

if (! -r "$Globus::Core::Paths::bindir/openssl")
{
    symlink($openssl_exec, "$Globus::Core::Paths::bindir/openssl");
}

$metadata->finish();
sub usage
{
    print "Usage: $0 [options]\n".
          "Options:  [--with-openssl=PATH]\n".
          "          [--help|-h]\n";
    exit 1;
}
