Running the server:

It is assumed that the toolkit installation was successful and that globus
security is properly configured.


***
Single user mode:
At the least, a user certificate will be needed to run the server
with security enabled, in single user mode.

The server should *not* be run as root in single user mode.

There should be a ~/.gridmap file, containing your cert subject and username.

Create a proxy with grid-proxy-init

Run the server:

globus-gridftp-server -nofork <args>



***
Daemon mode:

The server should generally be run as root in daemon mode, though it is
possible to run it as a user.  In that case only that user will be able
to authenticate.
When run as a user you will need a proxy as above.
When run as root you will need to have a host certificate.

globus-gridftp-server < -s | -S > <args>
-s runs in the foreground
-S detaches from the terminal and runs in the background


***
Under xinetd/inetd:

here is a sample gridftp xinetd config entry:
-------------------------------
service gridftp
{
instances               = 100
socket_type             = stream
wait                    = no
user                    = root
env                     += GLOBUS_LOCATION=<globus_location>
env                     += LD_LIBRARY_PATH=<globus_location>/lib
server                  = <globus_location>/sbin/globus-gridftp-server
server_args             = -i
log_on_success         += DURATION
nice                    = 10
disable                 = no
}
-------------------------------

and a sample inetd.conf entry:
-------------------------------
gridftp   stream   tcp   nowait   root   /usr/bin/env  \
    GLOBUS_LOCATION=<globus_location>                  \
    LD_LIBRARY_PATH=<globus_location>/lib              \ 
    <globus_location>/sbin/globus-gridftp-server -i
-------------------------------

note that the service name used (gridftp in this case) should be defined in 
/etc/services with the desired port.


***
Remote data-node and striped configuration:

Note: the frontend and data-nodes can each be run in any of the above modes.


frontend: 
globus-gridftp-server <args> -r <host:port>[,<host:port>,...]

data-node:
globus-gridftp-server <args> -dn

The -p <port> option used on the data-node is the port that you would use
in the -r option of the front end.
for example:
machineB> globus-gridftp-server -p 6000 -dn
machineC> globus-gridftp-server -p 7000 -dn
machineA> globus-gridftp-server -p 5000 -r machineB:6000,machineC:7000

The client then would of course only connect to machineA:5000.

-- globus-url-copy now includes a -stripe option that should be used when
striped transfers are desired.

              
***
Configuration file and command-line options:

The configuration is loaded from /etc/grid-security/gridftp.conf and then 
either $GLOBUS_LOCATION/etc/gridftp.conf or the file given with the -c 
parameter.

Options are allowed one per line, with the format 
<option> <value>
If value contains spaces it should be enclosed in double-quotes (")
Flags or boolean options should only have a value of 0 or 1
Blank lines and lines begining with # are ignored.
note that the format of this file may change in the future.
example:
----------------------
port 5000
allow_anonyous 1
anonymous_user bob
banner "Welcome!"
----------------------

see globus-gridftp-server -help for available options.
