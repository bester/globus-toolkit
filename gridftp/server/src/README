Running the server:

It is assumed that the installation was successful and that globus
security is properly configured.


***
Single user mode:
At the least, a user certificate will be needed to run the server
with security enabled, in single user mode.

The server should *not* be run as root in single user mode.

There should be a ~/.gridmap file, containing your cert subject and username.

Create a proxy with grid-proxy-init

Run the server:

globus-gridftp-server <args>



***
as a daemon:

The server should generally be run as root in daemon mode, though it is
possible to run it as a user.  In that case only that user will be able
to authenticate.
When run as a user you will need a proxy as above.
When run as root you will need to have a host certificate.

globus-gridftp-server < -s | -S > <args>
-s runs in the foreground, and allows logging to stdout/stderr
-S detaches from the terminal and runs in the background



***
under xinetd/inetd:

here is a sample gridftp xinetd config entry:
-------------------------------
service gridftp2
{
instances               = 100
socket_type             = stream
wait                    = no
user                    = root
env                     += GLOBUS_LOCATION=<globus_location>
env                     += LD_LIBRARY_PATH=<globus_location>/lib
env                     += PATH=<globus_location>/sbin:<globus_location>/bin
server                  = <globus_location>/sbin/globus-gridftp-server
server_args             = -i
port                    = 5555
log_on_success         += DURATION USERID
log_on_failure         += USERID
nice                    = 10
disable                 = no
}
-------------------------------
note that the service name used (gridftp2 in this case) should be defined in 
/etc/services with the desired port.



***
Command line arguments:

-p <port>     specify the port to listen on
-s, -S        run in daemon mode (see above)
-i            run in inetd mode (see above)
-ns           run with no security at all.  unencrypted access to anyone.
              for testing only!
-aa           allow unencrypted anonymous access.  should be run as an 
              unprivledged user, or as root when the 'anonymous_user' 
              and 'anonymous_group' options are set in the config file 
              (see configfile section).  note that gsi clients may still
              connect as normal when this mode is enabled.
-d <num>      debug level.  default of 1 only shows errors, 3 will show other
              info, and 7 will dump the entire control channel.
-l <logfile>  logging defaults to stderr.  speficy the full path to a logfile.
              this is the only way to get logging/debug info with -i or -S.
-c <config>   load this config file instead of the 
              default $GLOBUS_LOCATION/etc/gridftp.conf 
-G <globus_loc> use this path as the $GLOBUS_LOCATION

Configuration file and environment variables:

The configuration is loaded from /etc/grid-security/gridftp.conf and then 
either $GLOBUS_LOCATION/etc/gridftp.conf or the file given with the -c 
parameter.

Options are allowed one per line, with the format 
<option> <value>
If value contains spaces it should be enclosed in double-quotes (")
Flags or boolean options should only have a value of 0 or 1
Blank lines and lines begining with # are ignored.
note that the format of this file may change in the future.
example:
----------------------
port 5000
allow_anonyous 1
anonymous_user bob
banner "Welcome!"
----------------------

The following options are allowed:

allow_anonymous <1>         same as the -aa option
anonymous_user <username>   user to setuid to an anonymous connection is made
anonymous_group <group>     group to setgid to an anonymous connection is made
banner_file <filename>      filename to read the banner (pre-login) message from
banner <string>             define the banner directly with this
connections_disabled <1>    disable connections
daemon <1>                  same as -s or -S options
debug_level <num>           same as -d option
detach <1>                  same as -S option
globus_location <path>      same as -G option
hostname <hostname or ip>   defines interface to use for data connections
                            (sets GLOBUS_HOSTNAME env var)
idle_timeout <secs>        control channel idle timeout until session is closed
inetd <1>                   same as -i option
login_msg_file <filename>   filename to read the post-login message from
login_msg <string>          define the post-login message directly with this
logfile <filename>          same as -l option
max_connections <num>       maximum concurrent connections to allow
no_security <1>             same as -ns option
port <num>                  same as -p option
tcp_port_range <low-high>   defines port range to use for data connections
                            (sets GLOBUS_TCP_PORT_RANGE env var)
terse_banner <1>            enable minimal pre-login banner


Note that commandline options and configuration file options may both be used
    and that the commandline will override the config file.



***
Known issues:

running as a daemon (-s or -S) sometimes triggers a bug that causes 
an assertion. that do not come up when running as a single process.

the server will leak a socket (and the child process will hang in 
daemon mode) when the client sends a PASV and then RETR or STOR and
then terminating.

the server running in inetd mode may not automatically load the
config file from $GLOBUS_LOCATION/etc/gridftp.conf.  use the
-c <configfile> parameter to specify the config file. 