
FTP test suite notes:

-running the test suite requires many common unix utilites to be installed.  you'll need at least: cat, cmp, diff, scp, perl, and sed

-run_command() in FtpTestLib.pm currently has a hack in place to deal with windows build installing exes with incorrect names (they have underscores instead of hyphens)

-copy *.pl *.pm testcred.pem dc31a685.0 dc31a685.signing_policy 
  from the gridftp\client\test dir to folder with all test exes

-currently test requires external server (since gridftp isn't ported to windows yet)
  once that server is setup, set the following env variables:
set GLOBUS_LOCATION=<globus location>
set FTP_TEST_DEST_FILE=<some file your server has write access to>
set FTP_TEST_DEST_HOST=192.168.100.11:5000
set FTP_TEST_SOURCE_HOST=192.168.100.11:5000
set FTP_TEST_DEST_USER=link
set FTP_TEST_SOURCE_USER=link

- user specified in FTP_TEST_DEST_USER/FTP_TEST_SOURCE_USER is used for scp-ing files to and from remote server.  Be sure to connect to server with ssh first to force host entry into known_hosts file.

-note: running test suite with remote server disables a couple tests.. you will see 'FAILED before any test output arrived'

-I've only tested without GSI using an anonymous/plain text gridftp server
set FTP_TEST_NO_GSI=1

-The test suite will not work with NAT in between it and the remote server without a disgusting hack to globus_ftp_client_state.c (this is also the case on unix side)

-The windows registry needs its tcpip settings changed from their defaults.  In particular, the MaxUserPort setting needs to be increased for all tests to succeed (the test suite makes many connections which exhausts windows' ephemeral port range). I set it to the max possible, 65535.

-run the test suite with globus-ftp-client-run-tests.pl

-the test suite reports that the last test in globus-ftp-client-caching-get-test.pl and globus-ftp-client-get-test.pl fails.  Logging shows they are in fact NOT failing.  I am not sure why the test harness is lying.
