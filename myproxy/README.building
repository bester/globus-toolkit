First, you need to install GPT and the Globus Toolkit packages
required for MyProxy.  Right now the best way to do that is to run
"make gsi-myproxy postinstall" in the gt4.0.1-all-source-installer
directory.  That will include all the Globus Toolkit packages needed
by MyProxy.  

Alternatively, you can use a gt4.0.1 binary installer, in which case
you'll additionall need to install globus_core with the following
command (replacing gcc32dbg with the flavor of your choice):

  $ gpt-build -nosrc gcc32dbg

You'll need GSI user credentials to run the MyProxy clients and host
credentials to run the myproxy-server.

Second, you need special versions of the GNU autotools for working
with GPT.  Download
<ftp://ftp.globus.org/pub/gt4/4.0/4.0.0/gpt/autotools-for-gpt3.2autotools2004.tar.gz>
and run "./install-autotools $GLOBUS_LOCATION" in the
autotools-for-gpt3.2autotools2004 directory to install autoheader,
automake, autoconf, etc., into $GLOBUS_LOCATION/bin.  These special
autotools must be in your $PATH when you run the commands below.

Beware: the above procedure changes frequently.

To build in a CVS workspace (replacing gcc32dbg with the flavor of
your Globus Toolkit installation):
$ ./bootstrap
$ ./configure --with-flavor=gcc32dbg
$ make

Don't use threaded (thr) flavors.

To install from a CVS workspace to $GLOBUS_LOCATION:
$ make install

To build source packages from a CVS workspace:
$ make dist

---------- Releasing MyProxy ----------

0. Make sure all changes for the release are documented in the VERSION
   file.  Be sure to note any API changes.

1. Update the version definitions in a few different files.  Be aware
   of the difference between the MyProxy version and the GPT package
   version.

     myproxy.h: update the MYPROXY_VERSION_* constants
     VERSION: update version on first line and add entry to Version History
     pkgdata/pkg_data_src.gpt.in: update Aging_Version and VersionLabel

   Commit your changes to CVS.

2. Build a source package.

     $ ./bootstrap
     $ ./configure --with-flavor=gcc32dbg
     $ make dist

3. Verify that the source package builds against supported versions of
   the Globus Toolkit.  It should build without warnings.

     $ gpt-build -verbose myproxy-*.tar.gz gcc32dbg

   To submit test builds to the UW NMI system
   (http://grandcentral.cs.wisc.edu:2500/nmi/show/HomePage):

     $ ssh grandcentral.cs.wisc.edu
     $ nwo/glue/myproxy/build
     $ cvs update
     $ vi cmdfile		# edit component_version
     $ vi myproxy-src.ftp	# edit ftp_target
     $ nmi_submit cmdfile

4. Test the installation.  (-valgrind will work only on x86.)

     $ grid-proxy-init
     $ myproxy-test -startserver -valgrind

5. Tag CVS with the version number (ex. MYPROXY_3_3).

     $ cvs tag MYPROXY_X_X

6. Sign the release file with GPG.

     $ gpg -b myproxy-*.tar.gz

7. Copy README, LICENSE, VERSION, and myproxy-*.tar.gz to
   /afs/ncsa.uiuc.edu/ftp/ftp/aces/myproxy.

     $ cp README LICENSE VERSION myproxy-*.tar.gz \
       /afs/ncsa.uiuc.edu/ftp/ftp/aces/myproxy

8. Update MyProxy web site in
   /afs/ncsa.uiuc.edu/web/grid.ncsa.uiuc.edu/htdocs/myproxy.

     download.html: add new entry at top of table for new release
     index.html: add note to News
     install.html: any changes to install instructions needed?
     man: update html man pages

   To update html man pages, run make_html in the man subdirectory of
   your CVS workspace and copy the resulting html files to the web
   site.

   Commit web site changes to CVS.

9. Send release announcement to myproxy-users@ncsa.uiuc.edu.
   Sign it with 'gpg --clearsign'.

10. Add MyProxy version number to http://bugzilla.ncsa.uiuc.edu/.
