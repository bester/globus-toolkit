#!/usr/bin/make -f
# -*- makefile -*-

DEB_HOST_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)

ifneq (,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
NUMJOBS = $(patsubst parallel=%,%,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
MAKEFLAGS += -j$(NUMJOBS)
endif

include /usr/share/quilt/quilt.make

name = globus-xio
_name = globus_xio
version = 2.9
soname = 0
toolkit_version = 5.1.1
toolkit_major = $(shell expr $(toolkit_version) : "\([0-9]*\)")
toolkit_major_minor = $(shell expr $(toolkit_version) : "\([0-9]*.[0-9]*\)")
source_packages_url = http://www.globus.org/ftppub/gt$(toolkit_major)/$(toolkit_major_minor)/$(toolkit_version)/packages/src

INSTALLDIR = $(CURDIR)/debian/tmp
GLOBUSPACKAGEDIR = $(INSTALLDIR)$(_datadir)/globus/packages

_prefix = /usr
_bindir = $(_prefix)/bin
_sbindir = $(_prefix)/sbin
_libdir = $(_prefix)/lib
_datadir = $(_prefix)/share
_mandir = $(_datadir)/man
_docdir = $(_datadir)/doc

DEB_BUILD_ARCH_CPU ?= $(shell dpkg-architecture -qDEB_BUILD_ARCH_CPU)

ifneq (,$(filter $(DEB_HOST_ARCH_CPU), amd64 alpha ia64 s390x ppc64 sparc64))
flavor = gcc64
else
flavor = gcc32
endif

sed: sed-stamp
	:

sed-stamp: $(QUILT_STAMPFN)
	dh_testdir

	touch $@

unsed: cleanup
	dh_testdir

	rm -f sed-stamp

configure: configure-stamp
	:

configure-stamp: sed-stamp
	dh_testdir

	/usr/share/globus/globus-bootstrap.sh

	for f in config.sub config.guess ; do \
	  if [ -e /usr/share/misc/$$f -a ! -e $$f.dist ] ; then \
	    mv $$f $$f.dist ; \
	    cp -f /usr/share/misc/$$f $$f ; \
	  fi ; \
	done

	./configure \
	   --host=$(DEB_HOST_GNU_TYPE) \
	   --build=$(DEB_BUILD_GNU_TYPE) \
	   --prefix=$(_prefix) \
	   --mandir='$${datadir}/man' \
	   --infodir='$${datadir}/info' \
	   --with-flavor=$(flavor) \
	   --disable-static \
	   --docdir='$(_docdir)/$(name)' \
	   --enable-doxygen

	touch $@

build: build-stamp
	:

build-stamp: configure-stamp
	dh_testdir

	$(MAKE)

	touch $@

unpatch: unsed

clean: unpatch
	:

cleanup:
	dh_testdir
	dh_testroot

	if [ -r Makefile ] ; then $(MAKE) distclean ; fi

	for f in config.sub config.guess ; do \
	  if [ -e $$f.dist ] ; then \
	    mv -f $$f.dist $$f ; \
	  fi ; \
	done

	# Remove autogenerated files

	rm -f aclocal.m4
	rm -f configure
	rm -f config.guess
	rm -f config.sub
	rm -f ltmain.sh
	rm -f mkinstalldirs

	rm -f doxygen/Doxyfile*
	rm -f doxygen/Makefile.am
	rm -f pkgdata/Makefile.am
	rm -f pkgdata/*.filelist
	rm -f pkgdata/*.gpt
	rm -f globus_automake*
	rm -rf autom4te.cache

	rm -rf doxygen/doc

	rm -f config.h.in

	find . -name Makefile.in -exec rm {} ';'

	rm -f build-stamp configure-stamp

	dh_clean debian/*.install

install: build-stamp
	dh_testdir
	dh_testroot
	dh_clean -k

	$(MAKE) install DESTDIR=$(INSTALLDIR)

	# Fix doxygen glitches
	for f in $(INSTALLDIR)$(_mandir)/man3/globus_xio_driver.3 \
		 $(INSTALLDIR)$(_mandir)/man3/GLOBUS_XIO_API_ASSIST.3 ; do \
	  sed 's/P\.RS/P\n.RS/' -i $$f ; \
	done

	# Remove .la files
	rm -f $(INSTALLDIR)/$(_libdir)/lib*.la
	sed /lib.*\.la/d \
	  -i $(GLOBUSPACKAGEDIR)/$(_name)/$(flavor)_dev.filelist

	# Generate package filelists
	cat $(GLOBUSPACKAGEDIR)/$(_name)/$(flavor)_rtl.filelist \
	  | sed s!^!debian/tmp$(_prefix)! > debian/lib$(name)$(soname).install
	cat $(GLOBUSPACKAGEDIR)/$(_name)/$(flavor)_dev.filelist \
	  | sed s!^!debian/tmp$(_prefix)! > debian/lib$(name)-dev.install
	cat $(GLOBUSPACKAGEDIR)/$(_name)/noflavor_doc.filelist \
	  | sed s!^!debian/tmp$(_prefix)! > debian/lib$(name)-doc.install

binary-indep:
	:

binary-arch: install
	dh_testdir
	dh_testroot
	mkdir -p debian/lib$(name)-doc$(_docdir)
	ln -s lib$(name)-dev debian/lib$(name)-doc$(_docdir)/lib$(name)-doc
	dh_installchangelogs
	dh_installdocs
	dh_install --fail-missing
	dh_installman
	dh_link
	dh_strip --dbg-package=globus-xio-dbg
	dh_compress -X .tag
	dh_fixperms
	dh_perl
	dh_makeshlibs
	dh_installdeb
	dh_shlibdeps -l debian/lib$(name)$(soname)/usr/lib
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
	:

get-orig-source:
	if [ -r $(name)_$(version).orig.tar.gz ]; then \
	    echo "$(name)_$(version).orig.tar.gz already exists" ; \
	else \
	    echo "Fetching upstream version"; \
	    wget $(source_packages_url)/$(_name)-$(version).tar.gz; \
	    mv $(_name)-$(version).tar.gz $(name)_$(version).orig.tar.gz; \
        fi

.PHONY: build clean binary-indep binary-arch binary install configure get-orig-source
